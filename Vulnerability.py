import requests
import sys
from urllib.parse import urljoin, quote

# Common payloads for vulnerability testing
payloads = {
    "sql_injection": ["' OR '1'='1", "' UNION SELECT NULL --", "\" OR \"1\"=\"1", "' AND SLEEP(5) --"],
    "xss": ['<script>alert(1)</script>', '" onmouseover="alert(1)"'],
    "open_redirect": ["//google.com", "https://evil.com"]
}

headers = {
    "User-Agent": "Mozilla/5.0 (VulnScanner)"
}

def test_sql_injection(url):
    print("\n[+] Testing SQL Injection...")
    for payload in payloads["sql_injection"]:
        target = f"{url}{quote(payload)}"
        try:
            r = requests.get(target, headers=headers, timeout=5)
            if any(err in r.text.lower() for err in ["sql syntax", "mysql", "syntax error", "odbc"]):
                print(f"[!] Possible SQL Injection found: {target}")
        except:
            pass

def test_xss(url):
    print("\n[+] Testing XSS...")
    for payload in payloads["xss"]:
        target = f"{url}{quote(payload)}"
        try:
            r = requests.get(target, headers=headers, timeout=5)
            if payload in r.text:
                print(f"[!] Possible XSS found: {target}")
        except:
            pass

def test_open_redirect(url):
    print("\n[+] Testing Open Redirect...")
    for payload in payloads["open_redirect"]:
        target = f"{url}{quote(payload)}"
        try:
            r = requests.get(target, headers=headers, allow_redirects=False, timeout=5)
            if r.status_code in [301, 302] and "evil.com" in r.headers.get("Location", ""):
                print(f"[!] Possible Open Redirect found: {target}")
        except:
            pass

def test_server_info(url):
    print("\n[+] Checking Server Info Leakage...")
    try:
        r = requests.get(url, headers=headers, timeout=5)
        server = r.headers.get("Server")
        if server:
            print(f"[!] Server header found: {server} (may reveal sensitive info)")
    except:
        pass

def main():
    if len(sys.argv) != 2:
        print(f"Usage: python {sys.argv[0]} <target_url>")
        print(f"Example: python {sys.argv[0]} 'http://example.com/page?id='")
        sys.exit(1)

    target_url = sys.argv[1]
    if not target_url.startswith("http"):
        target_url = "http://" + target_url

    test_sql_injection(target_url)
    test_xss(target_url)
    test_open_redirect(target_url)
    test_server_info(target_url)

if __name__ == "__main__":
    main()
